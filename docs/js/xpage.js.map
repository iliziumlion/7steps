{"version":3,"sources":["webpack:///./src/ts/xpage/EventListener.ts","webpack:///./src/ts/xpage/ready.ts","webpack:///./src/ts/xpage/core.ts","webpack:///./src/ts/xpage/Element.ts"],"names":["EventListener","_super","__extends","prototype","add","event","callback","options","core_1","default","each","this","els","el","i","addEventListener","trigger","evt","document","createEvent","initEvent","dispatchEvent","Element_1","exports","e","Error","App","getElements","selector","elements","querySelectorAll","length","getElement","querySelector","elementsGetter","transformNodeListToArray","list","Array","slice","call","wrap","wrapper","localWrapper","createElement","HTMLElement","innerHTML","outerHTML","parentNode","replaceChild","_i","elements_1","console","error","Element","_length","NodeList","Object","defineProperty","_els","addElement","element","concat","is","has","searchElements","isFinded","_a","_b","searchElements_1","target","contains","addClass","className","classList","removeClass","remove","toggleClass","hasClass","targetClass","find","searchingElements","findedElements","el_1","push","closest","text","innerText","textArray_1","get","index","getHTMLElement","height","isNaN","style","parseInt","getComputedStyle","map","prev","previousElementSibling","replace"],"mappings":"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","file":"js/xpage.js","sourcesContent":["import App from \"./core\"\r\nimport Element from \"./Element\"\r\n\r\ninterface EventOtions{\r\n\tcapture?: boolean,\r\n\tonce?: boolean,\r\n\tpassive?: boolean\r\n}\r\n\r\nexport default class EventListener extends Element{\r\n\r\n\t/** \r\n\t* Метод для подписки на событие\r\n\t* @param event: string - название js события\r\n\t* @param callback: function\r\n\t* @param options: object\r\n\t* @retrun EventListener\r\n\t*/\r\n\tpublic add(event: string, callback: any, options?: EventOtions): EventListener{\r\n\r\n\t\tApp.each(this.els, function(el:HTMLElement, i: number){\r\n\t\t\tel.addEventListener(event, function(event){\r\n\t\t\t\tcallback(this, event, i)\r\n\t\t\t}, options)\r\n\t\t})\r\n\r\n\t\treturn this\r\n\t}\r\n\r\n\t/** \r\n\t* Метод для вызова события\r\n\t* @param event: string - название js события\r\n\t* @retrun EventListener\r\n\t*/\r\n\tpublic trigger(event: string): EventListener{\r\n\t\tApp.each(this.els, function(el: HTMLElement){\r\n\t\t\tlet evt: Event = document.createEvent(\"HTMLEvents\");\r\n\r\n\t\t\tevt.initEvent(event, false, true)\r\n\t\t\tel.dispatchEvent(evt)\r\n\t\t})\r\n\r\n\t\treturn this\r\n\t}\r\n}","/** \r\n * DOMContentLoaded \r\n * @param callback : Function\r\n*/\r\nconst domReady = (callback: any): void => {\r\n\ttry{\r\n\t\tdocument.addEventListener(\"DOMContentLoaded\", callback)\r\n\t}catch(e){\r\n\t\tthrow Error(e)\r\n\t}\r\n}\r\n\r\nexport default domReady","export default class App {\r\n\tpublic static getElements(selector: string): NodeList{\r\n\t\tconst elements: any = document.querySelectorAll(selector);\r\n\r\n\t\treturn elements.length ? elements : []\r\n\t\t// return this.elementsGetter(sele ctor)\r\n\t}\r\n\r\n\t/**\r\n\t* Метод получения одного объекта по селектору\r\n\t* @param selector: string\r\n\t* @return HTMLElement\r\n\t*/\r\n\tpublic static getElement(selector: string): HTMLElement{\r\n\t\tconst element: any = document.querySelector(selector);\r\n\r\n\t\treturn element\r\n\t}\r\n\r\n\tpublic static elementsGetter(selector: string): HTMLElement[]{\r\n\t\treturn App.transformNodeListToArray(document.querySelectorAll(selector))\r\n\t}\r\n\r\n\tpublic static transformNodeListToArray(list: NodeList): HTMLElement[]{\r\n\t\ttry{\r\n\t\t\treturn Array.prototype.slice.call(list)\r\n\t\t}catch(e){\r\n\t\t\tthrow Error(e)\r\n\t\t\treturn []\r\n\t\t}\r\n\t}\r\n\r\n\tpublic static wrap(selector: any, wrapper: HTMLElement): void\r\n\tpublic static wrap(selector: any, wrapper: string): void\r\n\tpublic static wrap(selector: any, wrapper: any): void{\r\n\t\tlet localWrapper: HTMLElement;\r\n\r\n\t\tif (typeof wrapper == \"string\")\r\n\t\t\tlocalWrapper = document.createElement(wrapper)\r\n\t\telse if (wrapper instanceof HTMLElement)\r\n\t\t\tlocalWrapper = wrapper\r\n\r\n\t\t// console.log(selector, [localWrapper])\r\n\r\n\t\tApp.each(selector, function(el: HTMLElement, i:number){\r\n\t\t\tlocalWrapper.innerHTML = el.outerHTML\r\n\r\n\t\t\tel.parentNode.replaceChild(localWrapper, el)\r\n\t\t})\r\n\t}\r\n\r\n\tpublic static each(elements: string, callback: any): void\r\n\tpublic static each(elements: HTMLElement[], callback: any): void\r\n\tpublic static each(elements: NodeList, callback: any): void\r\n\tpublic static each(elements: any, callback: any): void{\r\n\r\n\t\tif (!callback){\r\n\t\t\tconsole.error(\"Callback does not exists in yours 'each'\")\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tif (typeof elements == \"string\")\r\n\t\t\telements = App.transformNodeListToArray(App.getElements(elements))\r\n\r\n\t\tlet i = 0;\r\n\r\n\t\tfor (let el of elements){\r\n\t\t\tcallback(el, i)\r\n\t\t\ti++\r\n\t\t}\r\n\t}\r\n}","import App from \"./core\"\r\n\r\nexport default class Element {\r\n\t// private _selector: string\r\n\tprotected _els: HTMLElement[]\r\n\tpublic _length: number = 0\r\n\r\n\tset els(elements: HTMLElement[]){\r\n\t\tthis._els = elements\r\n\r\n\t\tthis._length = elements.length || 0\r\n\t}\r\n\r\n\tget els(){\r\n\t\treturn this._els\r\n\t}\r\n\r\n\tget length(){\r\n\t\treturn this._length\r\n\t}\r\n\r\n\t/**\r\n\t* Создание коллекции элементов\r\n\t* @param selector: HTMLElement[] || NodeList || HTMLElement || Element || string\r\n\t* @return Element\r\n\t*/  \r\n\tconstructor (selector?: EventTarget)\r\n\tconstructor (selector?: HTMLElement[])\r\n\tconstructor (selector?: NodeList)\r\n\tconstructor (selector?: Element)\r\n\tconstructor (selector?: string)\r\n\tconstructor (selector?: HTMLElement)\r\n\tconstructor (selector?: any){\r\n\r\n\t\tif (!selector)\r\n\t\t\tthis.els = []\r\n\t\telse if (typeof selector == \"string\")\r\n\t\t\tthis.els = App.elementsGetter(selector)\r\n\t\telse if (selector instanceof HTMLElement)\r\n\t\t\tthis.els = [selector]\r\n\t\telse if (selector instanceof NodeList)\r\n\t\t\tthis.els = App.transformNodeListToArray(selector)\r\n\t\telse if (selector instanceof Array && (selector[0] instanceof HTMLElement || !selector.length))\r\n\t\t\tthis.els = selector\r\n\t\telse if (selector instanceof Element)\r\n\t\t\tthis.els = selector.els\r\n\t\telse\r\n\t\t\tthrow Error(`Invalid selector: ${selector}`)\r\n\t}\r\n\r\n\t/**\r\n\t * Метод добавление HTMLElemnt в экземпляр\r\n\t * класса Element\r\n\t * @param element: HTMLElement || NodeList || string || Element\r\n\t * @return Element\r\n\t */\r\n\tpublic addElement(element: Element): Element\r\n\tpublic addElement(element: NodeList): Element\r\n\tpublic addElement(element: string): Element\r\n\tpublic addElement(element: HTMLElement): Element\r\n\tpublic addElement(element: HTMLElement[]): Element\r\n\tpublic addElement(element: any): Element{\r\n\r\n\t\tif (typeof element == \"string\")\r\n\t\t\tthis.els = this.els.concat(App.elementsGetter(element))\r\n\t\telse if (element instanceof Element)\r\n\t\t\tthis.els = this.els.concat(element.els)\r\n\t\telse if (element instanceof HTMLElement)\r\n\t\t\tthis.els = this.els.concat(element)\r\n\t\telse if (element instanceof NodeList)\r\n\t\t\tthis.els = this.els.concat(App.transformNodeListToArray(element))\r\n\t\telse if (element instanceof Array && (element[0] instanceof HTMLElement || !element.length))\r\n\t\t\tthis.els = this.els.concat(element)\r\n\t\telse\r\n\t\t\tthrow Error(`Invalid selector: ${element}`)\r\n\t\treturn this\r\n\t}\r\n\r\n\r\n\t/** \r\n\t* Метод сравнения элементов\r\n\t* @param selector: HTMLElement || string\r\n\t* @return boolean\r\n\t*/\r\n\tpublic is(selector: HTMLElement): boolean\r\n\tpublic is(selector: string): boolean\r\n\tpublic is(selector: any): boolean{\r\n\t\tlet element: HTMLElement[];\r\n\r\n\t\tif (typeof selector == \"string\")\r\n\t\t\telement = App.elementsGetter(selector)\r\n\t\telse if (selector instanceof HTMLElement)\r\n\t\t\telement = [selector]\r\n\r\n\t\treturn this.els[0] == element[0]\r\n\t}\r\n\r\n\t/** Метод проверки содержания текущими элементами передаваемых\r\n\t* @param selector: Element || HTMLElement || HTMLElement[] || NodeList || string\r\n\t* @return boolean\r\n\t*/\r\n\tpublic has(selector: Element): boolean\r\n\tpublic has(selector: HTMLElement): boolean\r\n\tpublic has(selector: HTMLElement[]): boolean\r\n\tpublic has(selector: NodeList): boolean\r\n\tpublic has(selector: string): boolean\r\n\tpublic has(selector: any): boolean{\r\n\t\tlet searchElements: HTMLElement[];\r\n\r\n\t\tif (typeof selector == \"string\")\r\n\t\t\tsearchElements = App.elementsGetter(selector)\r\n\t\telse if (selector instanceof HTMLElement)\r\n\t\t\tsearchElements = [selector]\r\n\t\telse if (selector instanceof Element)\r\n\t\t\tsearchElements = selector._els\r\n\t\telse if (selector instanceof NodeList)\r\n\t\t\tsearchElements = App.transformNodeListToArray(selector)\r\n\t\telse if (selector instanceof Array && (selector[0] instanceof HTMLElement || !selector.length))\r\n\t\t\tsearchElements = selector\r\n\t\telse\r\n\t\t\tthrow Error(`Invalid selector: ${selector}`)\r\n\r\n\t\tlet isFinded: boolean = false;\r\n\r\n\t\tfor (let el of this.els){\r\n\r\n\t\t\tfor (let target of searchElements)\r\n\t\t\t\tif (el.contains(target)){\r\n\t\t\t\t\tisFinded = true\r\n\t\t\t\t\tbreak\r\n\t\t\t\t}\r\n\r\n\t\t\tif (isFinded)\r\n\t\t\t\treturn true\r\n\t\t}\r\n\r\n\t\treturn false\r\n\t}\r\n\r\n\t/**\r\n\t* Назначить класс всем текущим элементам\r\n\t* @param className: string\r\n\t* @return Element\r\n\t*/\r\n\tpublic addClass(className: string): Element{\r\n\t\tApp.each(this.els, (el: HTMLElement) => {\r\n\t\t\tel.classList.add(className)\r\n\t\t})\r\n\t\treturn this\r\n\t}\r\n\r\n\t/**\r\n\t* Удалить класс у всех текущих элементов\r\n\t* @param className: string\r\n\t* @return Element\r\n\t*/\r\n\tpublic removeClass(className: string): Element{\r\n\t\tApp.each(this.els, (el: HTMLElement) => {\r\n\t\t\tel.classList.remove(className)\r\n\t\t})\r\n\t\treturn this\r\n\t}\r\n\r\n\t/**\r\n\t* Переключения класса у всех текущих элементов\r\n\t* @param className: string\r\n\t* @return Element\r\n\t*/\r\n\tpublic toggleClass(className: string, callback: Function = () => {}): Element{\r\n\t\tApp.each(this.els, (el: HTMLElement) => {\r\n\t\t\tif (el.classList.contains(className)){\r\n\t\t\t\tel.classList.remove(className)\r\n\r\n\t\t\t\tcallback(false)\r\n\t\t\t}else{\r\n\t\t\t\tel.classList.add(className)\r\n\t\t\t\tcallback(true)\r\n\t\t\t}\r\n\t\t})\r\n\t\treturn this\r\n\t}\r\n\r\n\tpublic hasClass(targetClass: string): boolean{\r\n\t\tfor (const el of this.els)\r\n\t\t\tif (el.classList.contains(targetClass))\r\n\t\t\t\treturn true\r\n\r\n\t\treturn false\r\n\t}\r\n\r\n\t/** Метод поиска потомков элемента по селектору \r\n\t* @param selector: string - селектор искомого\r\n\t* @return Element\r\n\t* */\r\n\tpublic find(selector: string): Element{\r\n\t\tlet searchingElements = new Array();\r\n\r\n\t\tApp.each(this.els, (el: HTMLElement) => {\r\n\t\t\tconst findedElements: NodeList = el.querySelectorAll(selector);\r\n\r\n\t\t\tif (!findedElements.length)\r\n\t\t\t\treturn\r\n\r\n\t\t\tfor (const el of App.transformNodeListToArray(findedElements))\r\n\t\t\t\tsearchingElements.push(el)\r\n\r\n\t\t\t// searchingElements.concat(App.transformNodeListToArray(findedElements))\r\n\r\n\t\t\t// console.log(searchingElements instanceof Array, App.transformNodeListToArray(findedElements) instanceof Array)\r\n\t\t})\r\n\r\n\t\treturn new Element(searchingElements)\r\n\t}\r\n\r\n\t/** Метод поиска родителей по селектору \r\n\t* @param selector: string\r\n\t* @return Element \r\n\t*/\r\n\tpublic closest(selector: string): Element{\r\n\t\tconst searchingElements = new Element();\r\n\r\n\t\tApp.each(this.els, (el: HTMLElement) => {\r\n\t\t\tconst findedElements: any = el.closest(selector);\r\n\r\n\t\t\tif (!findedElements)\r\n\t\t\t\treturn\r\n\r\n\t\t\tsearchingElements.addElement(findedElements);\r\n\t\t})\r\n\r\n\t\treturn searchingElements\r\n\t}\r\n\r\n\t/** Метод для изменения и получения innerText\r\n\t* @param text?: string\r\n\t* @return ELement || string[] || string */\r\n\tpublic text(text?: string): Element\r\n\tpublic text(text?: string): string[]\r\n\tpublic text(text?: string): string\r\n\tpublic text(text?: string): any{\r\n\t\tif (text){\r\n\t\t\tApp.each(this.els, (el: HTMLElement) => {\r\n\t\t\t\tel.innerText = text\r\n\t\t\t})\r\n\t\t\treturn this\r\n\t\t}else if (this.length > 1){\r\n\t\t\tlet textArray: string[] = [];\r\n\r\n\t\t\tApp.each(this.els, (el: HTMLElement) => {\r\n\t\t\t\ttextArray.push(el.innerText)\r\n\t\t\t})\r\n\t\t\treturn textArray\r\n\t\t}else\r\n\t\t\treturn this.els[0].innerText\r\n\t}\r\n\r\n\t/** Метод для получения конкретного элемента по индексу \r\n\t* @param index: number\r\n\t* @return Element*/\r\n\tpublic get(index: number): Element{\r\n\t\tif (this.els[index])\r\n\t\t\treturn new Element(this.els[index])\r\n\t\telse\r\n\t\t\treturn new Element()\r\n\t}\r\n\r\n\t/** Функция, возвращающая HTMLElement по индексу в коллеции элементов \r\n\t* @param index: nuber\r\n\t* @return HTMLElement \r\n\t*/\r\n\tpublic getHTMLElement(index: number): HTMLElement{\r\n\t\treturn this.els[index]\r\n\t}\r\n\r\n\t/** Метод получениея или установки высоты элементов\r\n\t* @param height || empty \r\n\t* @return height: number || Element */\r\n\tpublic height(height?: number): Element\r\n\tpublic height(height?: string): Element\r\n\tpublic height(height?: any): any{\r\n\t\tif (!height)\r\n\t\t\treturn parseInt(getComputedStyle(this.els[0]).height)\r\n\r\n\t\tApp.each(this.els, (el: HTMLElement) => {\r\n\t\t\tif (isNaN(height))\r\n\t\t\t\tel.style.height = height\r\n\t\t\telse\r\n\t\t\t\tel.style.height = height + \"px\"\r\n\t\t})\r\n\r\n\t\treturn this\r\n\t}\r\n\r\n\t/** Map\r\n\t* @param callback: Function\r\n\t* @return any[] */\r\n\tpublic map(callback: any): any[]{\r\n\t\treturn this.els.map(callback)\r\n\t}\r\n\r\n\r\n\t/** Метод в разработке */\r\n\tpublic prev(selector?: string): Element{\r\n\t\tconst searchingElements = new Element();\r\n\r\n\t\tApp.each(this.els, (el: HTMLElement) => {\r\n\t\t\tconst findedElements: any = el.previousElementSibling;\r\n\r\n\t\t\tif (!findedElements)\r\n\t\t\t\treturn\r\n\r\n\t\t\tif (selector){\r\n\t\t\t\tif (findedElements.classList.contains(selector.replace(\".\", \"\")))\r\n\t\t\t\t\tsearchingElements.addElement(findedElements)\r\n\t\t\t}else\r\n\t\t\t\tsearchingElements.addElement(findedElements)\r\n\t\t})\r\n\r\n\t\treturn searchingElements\r\n\t}\r\n}"],"sourceRoot":""}