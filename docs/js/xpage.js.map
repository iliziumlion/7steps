{"version":3,"sources":["webpack:///./src/ts/xpage/core.ts","webpack:///./src/ts/xpage/EventListener.ts","webpack:///./src/ts/xpage/ready.ts","webpack:///./src/ts/xpage/Element.ts"],"names":["App","getElements","selector","elements","document","querySelectorAll","length","getElement","querySelector","elementsGetter","transformNodeListToArray","list","Array","prototype","slice","call","e","Error","wrap","wrapper","localWrapper","createElement","HTMLElement","each","el","i","innerHTML","outerHTML","parentNode","replaceChild","callback","_i","elements_1","console","error","EventListener","_super","__extends","add","event","options","core_1","default","this","els","addEventListener","trigger","evt","createEvent","initEvent","dispatchEvent","Element_1","exports","Element","_length","NodeList","Object","defineProperty","_els","addElement","element","concat","is","has","searchElements","isFinded","_a","_b","searchElements_1","target","contains","addClass","className","classList","removeClass","remove","toggleClass","hasClass","targetClass","find","searchingElements","findedElements","el_1","push","closest","text","innerText","textArray_1","get","index","getHTMLElement","height","isNaN","style","parseInt","getComputedStyle","map","prev","previousElementSibling","replace"],"mappings":"yKAAA,IAAAA,EAAA,oBAAAA,KAuEA,OAtEeA,EAAAC,YAAd,SAA0BC,GACzB,IAAMC,EAAgBC,SAASC,iBAAiBH,GAEhD,OAAOC,EAASG,OAASH,EAAW,IASvBH,EAAAO,WAAd,SAAyBL,GAGxB,OAFqBE,SAASI,cAAcN,IAK/BF,EAAAS,eAAd,SAA6BP,GAC5B,OAAOF,EAAIU,yBAAyBN,SAASC,iBAAiBH,KAGjDF,EAAAU,yBAAd,SAAuCC,GACtC,IACC,OAAOC,MAAMC,UAAUC,MAAMC,KAAKJ,GAClC,MAAMK,GACN,MAAMC,MAAMD,KAOAhB,EAAAkB,KAAd,SAAmBhB,EAAeiB,GACjC,IAAIC,EAEkB,iBAAXD,EACVC,EAAehB,SAASiB,cAAcF,GAC9BA,aAAmBG,cAC3BF,EAAeD,GAIhBnB,EAAIuB,KAAKrB,EAAU,SAASsB,EAAiBC,GAC5CL,EAAaM,UAAYF,EAAGG,UAE5BH,EAAGI,WAAWC,aAAaT,EAAcI,MAO7BxB,EAAAuB,KAAd,SAAmBpB,EAAe2B,GAEjC,GAAKA,EAAL,CAKuB,iBAAZ3B,IACVA,EAAWH,EAAIU,yBAAyBV,EAAIC,YAAYE,KAIzD,IAFA,IAAIsB,EAAI,EAEOM,EAAA,EAAAC,EAAA7B,EAAA4B,EAAAC,EAAA1B,OAAAyB,IAAS,CACvBD,EADUE,EAAAD,GACGN,GACbA,UAXAQ,QAAQC,MAAM,6CAcjBlC,EAvEA,qgBCSA,IAAAmC,EAAA,SAAAC,GAAA,SAAAD,mDAmCA,OAnC4BE,EAAAF,EAAAC,GASpBD,EAAAtB,UAAAyB,IAAP,SAAWC,EAAeT,EAAeU,GAQxC,OANAC,EAAAC,QAAInB,KAAKoB,KAAKC,IAAK,SAASpB,EAAgBC,GAC3CD,EAAGqB,iBAAiBN,EAAO,SAASA,GACnCT,EAASa,KAAMJ,EAAOd,IACpBe,KAGGG,MAQDR,EAAAtB,UAAAiC,QAAP,SAAeP,GAQd,OAPAE,EAAAC,QAAInB,KAAKoB,KAAKC,IAAK,SAASpB,GAC3B,IAAIuB,EAAa3C,SAAS4C,YAAY,cAEtCD,EAAIE,UAAUV,GAAO,GAAO,GAC5Bf,EAAG0B,cAAcH,KAGXJ,MAETR,EAnCA,CAA4BgB,EAAAT,SAqC5BU,EAAAV,QAAeP,gJClCfiB,EAAAV,QARiB,SAACZ,GACjB,IACC1B,SAASyC,iBAAiB,mBAAoBf,GAC9C,MAAMd,GACN,MAAMC,MAAMD,uKCNd,IAAAqC,EAAA,WA8BC,SAAAA,EAAanD,GAEZ,GA7BMyC,KAAAW,QAAkB,EA6BnBpD,EAEA,GAAuB,iBAAZA,EACfyC,KAAKC,IAAMH,EAAAC,QAAIjC,eAAeP,QAC1B,GAAIA,aAAoBoB,YAC5BqB,KAAKC,IAAM,CAAC1C,QACR,GAAIA,aAAoBqD,SAC5BZ,KAAKC,IAAMH,EAAAC,QAAIhC,yBAAyBR,QACpC,GAAIA,aAAoBU,QAAUV,EAAS,aAAcoB,cAAgBpB,EAASI,QACtFqC,KAAKC,IAAM1C,MACP,MAAIA,aAAoBmD,GAG5B,MAAMpC,MAAM,qBAAqBf,GAFjCyC,KAAKC,IAAM1C,EAAS0C,SAVpBD,KAAKC,IAAM,GA6Rd,OAzTCY,OAAAC,eAAIJ,EAAAxC,UAAA,MAAG,KAMP,WACC,OAAO8B,KAAKe,UAPb,SAAQvD,GACPwC,KAAKe,KAAOvD,EAEZwC,KAAKW,QAAUnD,EAASG,QAAU,mCAOnCkD,OAAAC,eAAIJ,EAAAxC,UAAA,SAAM,KAAV,WACC,OAAO8B,KAAKW,yCA2CND,EAAAxC,UAAA8C,WAAP,SAAkBC,GAEjB,GAAsB,iBAAXA,EACVjB,KAAKC,IAAMD,KAAKC,IAAIiB,OAAOpB,EAAAC,QAAIjC,eAAemD,SAC1C,GAAIA,aAAmBP,EAC3BV,KAAKC,IAAMD,KAAKC,IAAIiB,OAAOD,EAAQhB,UAC/B,GAAIgB,aAAmBtC,YAC3BqB,KAAKC,IAAMD,KAAKC,IAAIiB,OAAOD,QACvB,GAAIA,aAAmBL,SAC3BZ,KAAKC,IAAMD,KAAKC,IAAIiB,OAAOpB,EAAAC,QAAIhC,yBAAyBkD,QACpD,MAAIA,aAAmBhD,QAAUgD,EAAQ,aAActC,cAAgBsC,EAAQtD,SAGnF,MAAMW,MAAM,qBAAqB2C,GAFjCjB,KAAKC,IAAMD,KAAKC,IAAIiB,OAAOD,GAG5B,OAAOjB,MAWDU,EAAAxC,UAAAiD,GAAP,SAAU5D,GACT,IAAI0D,EAOJ,MALuB,iBAAZ1D,EACV0D,EAAUnB,EAAAC,QAAIjC,eAAeP,GACrBA,aAAoBoB,cAC5BsC,EAAU,CAAC1D,IAELyC,KAAKC,IAAI,IAAMgB,EAAQ,IAYxBP,EAAAxC,UAAAkD,IAAP,SAAW7D,GACV,IAAI8D,EAEJ,GAAuB,iBAAZ9D,EACV8D,EAAiBvB,EAAAC,QAAIjC,eAAeP,QAChC,GAAIA,aAAoBoB,YAC5B0C,EAAiB,CAAC9D,QACd,GAAIA,aAAoBmD,EAC5BW,EAAiB9D,EAASwD,UACtB,GAAIxD,aAAoBqD,SAC5BS,EAAiBvB,EAAAC,QAAIhC,yBAAyBR,OAC1C,MAAIA,aAAoBU,QAAUV,EAAS,aAAcoB,cAAgBpB,EAASI,SAGtF,MAAMW,MAAM,qBAAqBf,GAFjC8D,EAAiB9D,EAMlB,IAFA,IAAI+D,GAAoB,EAETlC,EAAA,EAAAmC,EAAAvB,KAAKC,IAALb,EAAAmC,EAAA5D,OAAAyB,IAAS,CAEvB,IAFI,IAAIP,EAAE0C,EAAAnC,GAESoC,EAAA,EAAAC,EAAAJ,EAAAG,EAAAC,EAAA9D,OAAA6D,IAAc,CAA5B,IAAIE,EAAMD,EAAAD,GACd,GAAI3C,EAAG8C,SAASD,GAAQ,CACvBJ,GAAW,EACX,OAGF,GAAIA,EACH,OAAO,EAGT,OAAO,GAQDZ,EAAAxC,UAAA0D,SAAP,SAAgBC,GAIf,OAHA/B,EAAAC,QAAInB,KAAKoB,KAAKC,IAAK,SAACpB,GACnBA,EAAGiD,UAAUnC,IAAIkC,KAEX7B,MAQDU,EAAAxC,UAAA6D,YAAP,SAAmBF,GAIlB,OAHA/B,EAAAC,QAAInB,KAAKoB,KAAKC,IAAK,SAACpB,GACnBA,EAAGiD,UAAUE,OAAOH,KAEd7B,MAQDU,EAAAxC,UAAA+D,YAAP,SAAmBJ,EAAmB1C,GAWrC,YAXqC,IAAAA,MAAA,cACrCW,EAAAC,QAAInB,KAAKoB,KAAKC,IAAK,SAACpB,GACfA,EAAGiD,UAAUH,SAASE,IACzBhD,EAAGiD,UAAUE,OAAOH,GAEpB1C,GAAS,KAETN,EAAGiD,UAAUnC,IAAIkC,GACjB1C,GAAS,MAGJa,MAGDU,EAAAxC,UAAAgE,SAAP,SAAgBC,GACf,IAAiB,IAAA/C,EAAA,EAAAmC,EAAAvB,KAAKC,IAALb,EAAAmC,EAAA5D,OAAAyB,IAAQ,CACxB,GADYmC,EAAAnC,GACL0C,UAAUH,SAASQ,GACzB,OAAO,EAET,OAAO,GAODzB,EAAAxC,UAAAkE,KAAP,SAAY7E,GACX,IAAI8E,EAAoB,IAAIpE,MAgB5B,OAdA6B,EAAAC,QAAInB,KAAKoB,KAAKC,IAAK,SAACpB,GACnB,IAAMyD,EAA2BzD,EAAGnB,iBAAiBH,GAErD,GAAK+E,EAAe3E,OAGpB,IAAiB,IAAAyB,EAAA,EAAAmC,EAAAzB,EAAAC,QAAIhC,yBAAyBuE,GAA7BlD,EAAAmC,EAAA5D,OAAAyB,IAA4C,CAAxD,IAAMmD,EAAEhB,EAAAnC,GACZiD,EAAkBG,KAAKD,MAOlB,IAAI7B,EAAQ2B,IAOb3B,EAAAxC,UAAAuE,QAAP,SAAelF,GACd,IAAM8E,EAAoB,IAAI3B,EAW9B,OATAZ,EAAAC,QAAInB,KAAKoB,KAAKC,IAAK,SAACpB,GACnB,IAAMyD,EAAsBzD,EAAG4D,QAAQlF,GAElC+E,GAGLD,EAAkBrB,WAAWsB,KAGvBD,GASD3B,EAAAxC,UAAAwE,KAAP,SAAYA,GACX,GAAIA,EAIH,OAHA5C,EAAAC,QAAInB,KAAKoB,KAAKC,IAAK,SAACpB,GACnBA,EAAG8D,UAAYD,IAET1C,KACF,GAAIA,KAAKrC,OAAS,EAAE,CACzB,IAAIiF,EAAsB,GAK1B,OAHA9C,EAAAC,QAAInB,KAAKoB,KAAKC,IAAK,SAACpB,GACnB+D,EAAUJ,KAAK3D,EAAG8D,aAEZC,EAEP,OAAO5C,KAAKC,IAAI,GAAG0C,WAMdjC,EAAAxC,UAAA2E,IAAP,SAAWC,GACV,OAAI9C,KAAKC,IAAI6C,GACL,IAAIpC,EAAQV,KAAKC,IAAI6C,IAErB,IAAIpC,GAONA,EAAAxC,UAAA6E,eAAP,SAAsBD,GACrB,OAAO9C,KAAKC,IAAI6C,IAQVpC,EAAAxC,UAAA8E,OAAP,SAAcA,GACb,OAAKA,GAGLlD,EAAAC,QAAInB,KAAKoB,KAAKC,IAAK,SAACpB,GACfoE,MAAMD,GACTnE,EAAGqE,MAAMF,OAASA,EAElBnE,EAAGqE,MAAMF,OAASA,EAAS,OAGtBhD,MATCmD,SAASC,iBAAiBpD,KAAKC,IAAI,IAAI+C,SAezCtC,EAAAxC,UAAAmF,IAAP,SAAWlE,GACV,OAAOa,KAAKC,IAAIoD,IAAIlE,IAKduB,EAAAxC,UAAAoF,KAAP,SAAY/F,GACX,IAAM8E,EAAoB,IAAI3B,EAe9B,OAbAZ,EAAAC,QAAInB,KAAKoB,KAAKC,IAAK,SAACpB,GACnB,IAAMyD,EAAsBzD,EAAG0E,uBAE1BjB,IAGD/E,EACC+E,EAAeR,UAAUH,SAASpE,EAASiG,QAAQ,IAAK,MAC3DnB,EAAkBrB,WAAWsB,GAE9BD,EAAkBrB,WAAWsB,MAGxBD,GAET3B,EA9TA","file":"js/xpage.js","sourcesContent":["export default class App {\r\n\tpublic static getElements(selector: string): NodeList{\r\n\t\tconst elements: any = document.querySelectorAll(selector);\r\n\r\n\t\treturn elements.length ? elements : []\r\n\t\t// return this.elementsGetter(sele ctor)\r\n\t}\r\n\r\n\t/**\r\n\t* Метод получения одного объекта по селектору\r\n\t* @param selector: string\r\n\t* @return HTMLElement\r\n\t*/\r\n\tpublic static getElement(selector: string): HTMLElement{\r\n\t\tconst element: any = document.querySelector(selector);\r\n\r\n\t\treturn element\r\n\t}\r\n\r\n\tpublic static elementsGetter(selector: string): HTMLElement[]{\r\n\t\treturn App.transformNodeListToArray(document.querySelectorAll(selector))\r\n\t}\r\n\r\n\tpublic static transformNodeListToArray(list: NodeList): HTMLElement[]{\r\n\t\ttry{\r\n\t\t\treturn Array.prototype.slice.call(list)\r\n\t\t}catch(e){\r\n\t\t\tthrow Error(e)\r\n\t\t\treturn []\r\n\t\t}\r\n\t}\r\n\r\n\tpublic static wrap(selector: any, wrapper: HTMLElement): void\r\n\tpublic static wrap(selector: any, wrapper: string): void\r\n\tpublic static wrap(selector: any, wrapper: any): void{\r\n\t\tlet localWrapper: HTMLElement;\r\n\r\n\t\tif (typeof wrapper == \"string\")\r\n\t\t\tlocalWrapper = document.createElement(wrapper)\r\n\t\telse if (wrapper instanceof HTMLElement)\r\n\t\t\tlocalWrapper = wrapper\r\n\r\n\t\t// console.log(selector, [localWrapper])\r\n\r\n\t\tApp.each(selector, function(el: HTMLElement, i:number){\r\n\t\t\tlocalWrapper.innerHTML = el.outerHTML\r\n\r\n\t\t\tel.parentNode.replaceChild(localWrapper, el)\r\n\t\t})\r\n\t}\r\n\r\n\tpublic static each(elements: string, callback: any): void\r\n\tpublic static each(elements: HTMLElement[], callback: any): void\r\n\tpublic static each(elements: NodeList, callback: any): void\r\n\tpublic static each(elements: any, callback: any): void{\r\n\r\n\t\tif (!callback){\r\n\t\t\tconsole.error(\"Callback does not exists in yours 'each'\")\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tif (typeof elements == \"string\")\r\n\t\t\telements = App.transformNodeListToArray(App.getElements(elements))\r\n\r\n\t\tlet i = 0;\r\n\r\n\t\tfor (let el of elements){\r\n\t\t\tcallback(el, i)\r\n\t\t\ti++\r\n\t\t}\r\n\t}\r\n}","import App from \"./core\"\r\nimport Element from \"./Element\"\r\n\r\ninterface EventOtions{\r\n\tcapture?: boolean,\r\n\tonce?: boolean,\r\n\tpassive?: boolean\r\n}\r\n\r\nclass EventListener extends Element{\r\n\r\n\t/** \r\n\t* Метод для подписки на событие\r\n\t* @param event: string - название js события\r\n\t* @param callback: function\r\n\t* @param options: object\r\n\t* @retrun EventListener\r\n\t*/\r\n\tpublic add(event: string, callback: any, options?: EventOtions): EventListener{\r\n\r\n\t\tApp.each(this.els, function(el:HTMLElement, i: number){\r\n\t\t\tel.addEventListener(event, function(event){\r\n\t\t\t\tcallback(this, event, i)\r\n\t\t\t}, options)\r\n\t\t})\r\n\r\n\t\treturn this\r\n\t}\r\n\r\n\t/** \r\n\t* Метод для вызова события\r\n\t* @param event: string - название js события\r\n\t* @retrun EventListener\r\n\t*/\r\n\tpublic trigger(event: string): EventListener{\r\n\t\tApp.each(this.els, function(el: HTMLElement){\r\n\t\t\tlet evt: Event = document.createEvent(\"HTMLEvents\");\r\n\r\n\t\t\tevt.initEvent(event, false, true)\r\n\t\t\tel.dispatchEvent(evt)\r\n\t\t})\r\n\r\n\t\treturn this\r\n\t}\r\n}\r\n\r\nexport default EventListener","/** \r\n * DOMContentLoaded \r\n * @param callback : Function\r\n*/\r\nconst domReady = (callback: any): void => {\r\n\ttry{\r\n\t\tdocument.addEventListener(\"DOMContentLoaded\", callback)\r\n\t}catch(e){\r\n\t\tthrow Error(e)\r\n\t}\r\n}\r\n\r\nexport default domReady","import App from \"./core\"\r\n\r\nexport default class Element {\r\n\t// private _selector: string\r\n\tprotected _els: HTMLElement[]\r\n\tpublic _length: number = 0\r\n\r\n\tset els(elements: HTMLElement[]){\r\n\t\tthis._els = elements\r\n\r\n\t\tthis._length = elements.length || 0\r\n\t}\r\n\r\n\tget els(){\r\n\t\treturn this._els\r\n\t}\r\n\r\n\tget length(){\r\n\t\treturn this._length\r\n\t}\r\n\r\n\t/**\r\n\t* Создание коллекции элементов\r\n\t* @param selector: HTMLElement[] || NodeList || HTMLElement || Element || string\r\n\t* @return Element\r\n\t*/  \r\n\tconstructor (selector?: EventTarget)\r\n\tconstructor (selector?: HTMLElement[])\r\n\tconstructor (selector?: NodeList)\r\n\tconstructor (selector?: Element)\r\n\tconstructor (selector?: string)\r\n\tconstructor (selector?: HTMLElement)\r\n\tconstructor (selector?: any){\r\n\r\n\t\tif (!selector)\r\n\t\t\tthis.els = []\r\n\t\telse if (typeof selector == \"string\")\r\n\t\t\tthis.els = App.elementsGetter(selector)\r\n\t\telse if (selector instanceof HTMLElement)\r\n\t\t\tthis.els = [selector]\r\n\t\telse if (selector instanceof NodeList)\r\n\t\t\tthis.els = App.transformNodeListToArray(selector)\r\n\t\telse if (selector instanceof Array && (selector[0] instanceof HTMLElement || !selector.length))\r\n\t\t\tthis.els = selector\r\n\t\telse if (selector instanceof Element)\r\n\t\t\tthis.els = selector.els\r\n\t\telse\r\n\t\t\tthrow Error(`Invalid selector: ${selector}`)\r\n\t}\r\n\r\n\t/**\r\n\t * Метод добавление HTMLElemnt в экземпляр\r\n\t * класса Element\r\n\t * @param element: HTMLElement || NodeList || string || Element\r\n\t * @return Element\r\n\t */\r\n\tpublic addElement(element: Element): Element\r\n\tpublic addElement(element: NodeList): Element\r\n\tpublic addElement(element: string): Element\r\n\tpublic addElement(element: HTMLElement): Element\r\n\tpublic addElement(element: HTMLElement[]): Element\r\n\tpublic addElement(element: any): Element{\r\n\r\n\t\tif (typeof element == \"string\")\r\n\t\t\tthis.els = this.els.concat(App.elementsGetter(element))\r\n\t\telse if (element instanceof Element)\r\n\t\t\tthis.els = this.els.concat(element.els)\r\n\t\telse if (element instanceof HTMLElement)\r\n\t\t\tthis.els = this.els.concat(element)\r\n\t\telse if (element instanceof NodeList)\r\n\t\t\tthis.els = this.els.concat(App.transformNodeListToArray(element))\r\n\t\telse if (element instanceof Array && (element[0] instanceof HTMLElement || !element.length))\r\n\t\t\tthis.els = this.els.concat(element)\r\n\t\telse\r\n\t\t\tthrow Error(`Invalid selector: ${element}`)\r\n\t\treturn this\r\n\t}\r\n\r\n\r\n\t/** \r\n\t* Метод сравнения элементов\r\n\t* @param selector: HTMLElement || string\r\n\t* @return boolean\r\n\t*/\r\n\tpublic is(selector: HTMLElement): boolean\r\n\tpublic is(selector: string): boolean\r\n\tpublic is(selector: any): boolean{\r\n\t\tlet element: HTMLElement[];\r\n\r\n\t\tif (typeof selector == \"string\")\r\n\t\t\telement = App.elementsGetter(selector)\r\n\t\telse if (selector instanceof HTMLElement)\r\n\t\t\telement = [selector]\r\n\r\n\t\treturn this.els[0] == element[0]\r\n\t}\r\n\r\n\t/** Метод проверки содержания текущими элементами передаваемых\r\n\t* @param selector: Element || HTMLElement || HTMLElement[] || NodeList || string\r\n\t* @return boolean\r\n\t*/\r\n\tpublic has(selector: Element): boolean\r\n\tpublic has(selector: HTMLElement): boolean\r\n\tpublic has(selector: HTMLElement[]): boolean\r\n\tpublic has(selector: NodeList): boolean\r\n\tpublic has(selector: string): boolean\r\n\tpublic has(selector: any): boolean{\r\n\t\tlet searchElements: HTMLElement[];\r\n\r\n\t\tif (typeof selector == \"string\")\r\n\t\t\tsearchElements = App.elementsGetter(selector)\r\n\t\telse if (selector instanceof HTMLElement)\r\n\t\t\tsearchElements = [selector]\r\n\t\telse if (selector instanceof Element)\r\n\t\t\tsearchElements = selector._els\r\n\t\telse if (selector instanceof NodeList)\r\n\t\t\tsearchElements = App.transformNodeListToArray(selector)\r\n\t\telse if (selector instanceof Array && (selector[0] instanceof HTMLElement || !selector.length))\r\n\t\t\tsearchElements = selector\r\n\t\telse\r\n\t\t\tthrow Error(`Invalid selector: ${selector}`)\r\n\r\n\t\tlet isFinded: boolean = false;\r\n\r\n\t\tfor (let el of this.els){\r\n\r\n\t\t\tfor (let target of searchElements)\r\n\t\t\t\tif (el.contains(target)){\r\n\t\t\t\t\tisFinded = true\r\n\t\t\t\t\tbreak\r\n\t\t\t\t}\r\n\r\n\t\t\tif (isFinded)\r\n\t\t\t\treturn true\r\n\t\t}\r\n\r\n\t\treturn false\r\n\t}\r\n\r\n\t/**\r\n\t* Назначить класс всем текущим элементам\r\n\t* @param className: string\r\n\t* @return Element\r\n\t*/\r\n\tpublic addClass(className: string): Element{\r\n\t\tApp.each(this.els, (el: HTMLElement) => {\r\n\t\t\tel.classList.add(className)\r\n\t\t})\r\n\t\treturn this\r\n\t}\r\n\r\n\t/**\r\n\t* Удалить класс у всех текущих элементов\r\n\t* @param className: string\r\n\t* @return Element\r\n\t*/\r\n\tpublic removeClass(className: string): Element{\r\n\t\tApp.each(this.els, (el: HTMLElement) => {\r\n\t\t\tel.classList.remove(className)\r\n\t\t})\r\n\t\treturn this\r\n\t}\r\n\r\n\t/**\r\n\t* Переключения класса у всех текущих элементов\r\n\t* @param className: string\r\n\t* @return Element\r\n\t*/\r\n\tpublic toggleClass(className: string, callback: Function = () => {}): Element{\r\n\t\tApp.each(this.els, (el: HTMLElement) => {\r\n\t\t\tif (el.classList.contains(className)){\r\n\t\t\t\tel.classList.remove(className)\r\n\r\n\t\t\t\tcallback(false)\r\n\t\t\t}else{\r\n\t\t\t\tel.classList.add(className)\r\n\t\t\t\tcallback(true)\r\n\t\t\t}\r\n\t\t})\r\n\t\treturn this\r\n\t}\r\n\r\n\tpublic hasClass(targetClass: string): boolean{\r\n\t\tfor (const el of this.els)\r\n\t\t\tif (el.classList.contains(targetClass))\r\n\t\t\t\treturn true\r\n\r\n\t\treturn false\r\n\t}\r\n\r\n\t/** Метод поиска потомков элемента по селектору \r\n\t* @param selector: string - селектор искомого\r\n\t* @return Element\r\n\t* */\r\n\tpublic find(selector: string): Element{\r\n\t\tlet searchingElements = new Array();\r\n\r\n\t\tApp.each(this.els, (el: HTMLElement) => {\r\n\t\t\tconst findedElements: NodeList = el.querySelectorAll(selector);\r\n\r\n\t\t\tif (!findedElements.length)\r\n\t\t\t\treturn\r\n\r\n\t\t\tfor (const el of App.transformNodeListToArray(findedElements))\r\n\t\t\t\tsearchingElements.push(el)\r\n\r\n\t\t\t// searchingElements.concat(App.transformNodeListToArray(findedElements))\r\n\r\n\t\t\t// console.log(searchingElements instanceof Array, App.transformNodeListToArray(findedElements) instanceof Array)\r\n\t\t})\r\n\r\n\t\treturn new Element(searchingElements)\r\n\t}\r\n\r\n\t/** Метод поиска родителей по селектору \r\n\t* @param selector: string\r\n\t* @return Element \r\n\t*/\r\n\tpublic closest(selector: string): Element{\r\n\t\tconst searchingElements = new Element();\r\n\r\n\t\tApp.each(this.els, (el: HTMLElement) => {\r\n\t\t\tconst findedElements: any = el.closest(selector);\r\n\r\n\t\t\tif (!findedElements)\r\n\t\t\t\treturn\r\n\r\n\t\t\tsearchingElements.addElement(findedElements);\r\n\t\t})\r\n\r\n\t\treturn searchingElements\r\n\t}\r\n\r\n\t/** Метод для изменения и получения innerText\r\n\t* @param text?: string\r\n\t* @return ELement || string[] || string */\r\n\tpublic text(text?: string): Element\r\n\tpublic text(text?: string): string[]\r\n\tpublic text(text?: string): string\r\n\tpublic text(text?: string): any{\r\n\t\tif (text){\r\n\t\t\tApp.each(this.els, (el: HTMLElement) => {\r\n\t\t\t\tel.innerText = text\r\n\t\t\t})\r\n\t\t\treturn this\r\n\t\t}else if (this.length > 1){\r\n\t\t\tlet textArray: string[] = [];\r\n\r\n\t\t\tApp.each(this.els, (el: HTMLElement) => {\r\n\t\t\t\ttextArray.push(el.innerText)\r\n\t\t\t})\r\n\t\t\treturn textArray\r\n\t\t}else\r\n\t\t\treturn this.els[0].innerText\r\n\t}\r\n\r\n\t/** Метод для получения конкретного элемента по индексу \r\n\t* @param index: number\r\n\t* @return Element*/\r\n\tpublic get(index: number): Element{\r\n\t\tif (this.els[index])\r\n\t\t\treturn new Element(this.els[index])\r\n\t\telse\r\n\t\t\treturn new Element()\r\n\t}\r\n\r\n\t/** Функция, возвращающая HTMLElement по индексу в коллеции элементов \r\n\t* @param index: nuber\r\n\t* @return HTMLElement \r\n\t*/\r\n\tpublic getHTMLElement(index: number): HTMLElement{\r\n\t\treturn this.els[index]\r\n\t}\r\n\r\n\t/** Метод получениея или установки высоты элементов\r\n\t* @param height || empty \r\n\t* @return height: number || Element */\r\n\tpublic height(height?: number): Element\r\n\tpublic height(height?: string): Element\r\n\tpublic height(height?: any): any{\r\n\t\tif (!height)\r\n\t\t\treturn parseInt(getComputedStyle(this.els[0]).height)\r\n\r\n\t\tApp.each(this.els, (el: HTMLElement) => {\r\n\t\t\tif (isNaN(height))\r\n\t\t\t\tel.style.height = height\r\n\t\t\telse\r\n\t\t\t\tel.style.height = height + \"px\"\r\n\t\t})\r\n\r\n\t\treturn this\r\n\t}\r\n\r\n\t/** Map\r\n\t* @param callback: Function\r\n\t* @return any[] */\r\n\tpublic map(callback: any): any[]{\r\n\t\treturn this.els.map(callback)\r\n\t}\r\n\r\n\r\n\t/** Метод в разработке */\r\n\tpublic prev(selector?: string): Element{\r\n\t\tconst searchingElements = new Element();\r\n\r\n\t\tApp.each(this.els, (el: HTMLElement) => {\r\n\t\t\tconst findedElements: any = el.previousElementSibling;\r\n\r\n\t\t\tif (!findedElements)\r\n\t\t\t\treturn\r\n\r\n\t\t\tif (selector){\r\n\t\t\t\tif (findedElements.classList.contains(selector.replace(\".\", \"\")))\r\n\t\t\t\t\tsearchingElements.addElement(findedElements)\r\n\t\t\t}else\r\n\t\t\t\tsearchingElements.addElement(findedElements)\r\n\t\t})\r\n\r\n\t\treturn searchingElements\r\n\t}\r\n}"],"sourceRoot":""}